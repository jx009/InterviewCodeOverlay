{"version":3,"file":"preload.js","sources":["../electron/preload.ts"],"sourcesContent":["console.log(\"Preload script starting...\")\nimport { contextBridge, ipcRenderer } from \"electron\"\nconst { shell } = require(\"electron\")\n\nexport const PROCESSING_EVENTS = {\n  //global states\n  UNAUTHORIZED: \"procesing-unauthorized\",\n  NO_SCREENSHOTS: \"processing-no-screenshots\",\n  OUT_OF_CREDITS: \"out-of-credits\",\n  API_KEY_INVALID: \"api-key-invalid\",\n\n  //states for generating the initial solution\n  INITIAL_START: \"initial-start\",\n  PROBLEM_EXTRACTED: \"problem-extracted\",\n  SOLUTION_SUCCESS: \"solution-success\",\n  INITIAL_SOLUTION_ERROR: \"solution-error\",\n  RESET: \"reset\",\n\n  //states for processing the debugging\n  DEBUG_START: \"debug-start\",\n  DEBUG_SUCCESS: \"debug-success\",\n  DEBUG_ERROR: \"debug-error\"\n} as const\n\n// At the top of the file\nconsole.log(\"Preload script is running\")\n\nconst electronAPI = {\n  // Original methods\n  openSubscriptionPortal: async (authData: { id: string; email: string }) => {\n    return ipcRenderer.invoke(\"open-subscription-portal\", authData)\n  },\n  openSettingsPortal: () => ipcRenderer.invoke(\"open-settings-portal\"),\n  updateContentDimensions: (dimensions: { width: number; height: number }) =>\n    ipcRenderer.invoke(\"update-content-dimensions\", dimensions),\n  clearStore: () => ipcRenderer.invoke(\"clear-store\"),\n  getScreenshots: () => ipcRenderer.invoke(\"get-screenshots\"),\n  deleteScreenshot: (path: string) =>\n    ipcRenderer.invoke(\"delete-screenshot\", path),\n  toggleMainWindow: async () => {\n    console.log(\"toggleMainWindow called from preload\")\n    try {\n      const result = await ipcRenderer.invoke(\"toggle-window\")\n      console.log(\"toggle-window result:\", result)\n      return result\n    } catch (error) {\n      console.error(\"Error in toggleMainWindow:\", error)\n      throw error\n    }\n  },\n  // Event listeners\n  onScreenshotTaken: (\n    callback: (data: { path: string; preview: string }) => void\n  ) => {\n    const subscription = (_: any, data: { path: string; preview: string }) =>\n      callback(data)\n    ipcRenderer.on(\"screenshot-taken\", subscription)\n    return () => {\n      ipcRenderer.removeListener(\"screenshot-taken\", subscription)\n    }\n  },\n  onResetView: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(\"reset-view\", subscription)\n    return () => {\n      ipcRenderer.removeListener(\"reset-view\", subscription)\n    }\n  },\n  onSolutionStart: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(PROCESSING_EVENTS.INITIAL_START, subscription)\n    return () => {\n      ipcRenderer.removeListener(PROCESSING_EVENTS.INITIAL_START, subscription)\n    }\n  },\n  onDebugStart: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(PROCESSING_EVENTS.DEBUG_START, subscription)\n    return () => {\n      ipcRenderer.removeListener(PROCESSING_EVENTS.DEBUG_START, subscription)\n    }\n  },\n  onDebugSuccess: (callback: (data: any) => void) => {\n    ipcRenderer.on(\"debug-success\", (_event, data) => callback(data))\n    return () => {\n      ipcRenderer.removeListener(\"debug-success\", (_event, data) =>\n        callback(data)\n      )\n    }\n  },\n  onDebugError: (callback: (error: string) => void) => {\n    const subscription = (_: any, error: string) => callback(error)\n    ipcRenderer.on(PROCESSING_EVENTS.DEBUG_ERROR, subscription)\n    return () => {\n      ipcRenderer.removeListener(PROCESSING_EVENTS.DEBUG_ERROR, subscription)\n    }\n  },\n  onSolutionError: (callback: (error: string) => void) => {\n    const subscription = (_: any, error: string) => callback(error)\n    ipcRenderer.on(PROCESSING_EVENTS.INITIAL_SOLUTION_ERROR, subscription)\n    return () => {\n      ipcRenderer.removeListener(\n        PROCESSING_EVENTS.INITIAL_SOLUTION_ERROR,\n        subscription\n      )\n    }\n  },\n  onProcessingNoScreenshots: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(PROCESSING_EVENTS.NO_SCREENSHOTS, subscription)\n    return () => {\n      ipcRenderer.removeListener(PROCESSING_EVENTS.NO_SCREENSHOTS, subscription)\n    }\n  },\n  onOutOfCredits: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(PROCESSING_EVENTS.OUT_OF_CREDITS, subscription)\n    return () => {\n      ipcRenderer.removeListener(PROCESSING_EVENTS.OUT_OF_CREDITS, subscription)\n    }\n  },\n  onProblemExtracted: (callback: (data: any) => void) => {\n    const subscription = (_: any, data: any) => callback(data)\n    ipcRenderer.on(PROCESSING_EVENTS.PROBLEM_EXTRACTED, subscription)\n    return () => {\n      ipcRenderer.removeListener(\n        PROCESSING_EVENTS.PROBLEM_EXTRACTED,\n        subscription\n      )\n    }\n  },\n  onSolutionSuccess: (callback: (data: any) => void) => {\n    const subscription = (_: any, data: any) => callback(data)\n    ipcRenderer.on(PROCESSING_EVENTS.SOLUTION_SUCCESS, subscription)\n    return () => {\n      ipcRenderer.removeListener(\n        PROCESSING_EVENTS.SOLUTION_SUCCESS,\n        subscription\n      )\n    }\n  },\n  onUnauthorized: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(PROCESSING_EVENTS.UNAUTHORIZED, subscription)\n    return () => {\n      ipcRenderer.removeListener(PROCESSING_EVENTS.UNAUTHORIZED, subscription)\n    }\n  },\n  // External URL handler\n  openLink: (url: string) => shell.openExternal(url),\n  triggerScreenshot: () => ipcRenderer.invoke(\"trigger-screenshot\"),\n  triggerProcessScreenshots: () =>\n    ipcRenderer.invoke(\"trigger-process-screenshots\"),\n  triggerReset: () => ipcRenderer.invoke(\"trigger-reset\"),\n  triggerMoveLeft: () => ipcRenderer.invoke(\"trigger-move-left\"),\n  triggerMoveRight: () => ipcRenderer.invoke(\"trigger-move-right\"),\n  triggerMoveUp: () => ipcRenderer.invoke(\"trigger-move-up\"),\n  triggerMoveDown: () => ipcRenderer.invoke(\"trigger-move-down\"),\n  onSubscriptionUpdated: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(\"subscription-updated\", subscription)\n    return () => {\n      ipcRenderer.removeListener(\"subscription-updated\", subscription)\n    }\n  },\n  onSubscriptionPortalClosed: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(\"subscription-portal-closed\", subscription)\n    return () => {\n      ipcRenderer.removeListener(\"subscription-portal-closed\", subscription)\n    }\n  },\n  onReset: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(PROCESSING_EVENTS.RESET, subscription)\n    return () => {\n      ipcRenderer.removeListener(PROCESSING_EVENTS.RESET, subscription)\n    }\n  },\n  startUpdate: () => ipcRenderer.invoke(\"start-update\"),\n  installUpdate: () => ipcRenderer.invoke(\"install-update\"),\n  onUpdateAvailable: (callback: (info: any) => void) => {\n    const subscription = (_: any, info: any) => callback(info)\n    ipcRenderer.on(\"update-available\", subscription)\n    return () => {\n      ipcRenderer.removeListener(\"update-available\", subscription)\n    }\n  },\n  onUpdateDownloaded: (callback: (info: any) => void) => {\n    const subscription = (_: any, info: any) => callback(info)\n    ipcRenderer.on(\"update-downloaded\", subscription)\n    return () => {\n      ipcRenderer.removeListener(\"update-downloaded\", subscription)\n    }\n  },\n  decrementCredits: () => ipcRenderer.invoke(\"decrement-credits\"),\n  onCreditsUpdated: (callback: (credits: number) => void) => {\n    const subscription = (_event: any, credits: number) => callback(credits)\n    ipcRenderer.on(\"credits-updated\", subscription)\n    return () => {\n      ipcRenderer.removeListener(\"credits-updated\", subscription)\n    }\n  },\n  getPlatform: () => process.platform,\n  \n  // New methods for OpenAI API integration\n  getConfig: () => ipcRenderer.invoke(\"get-config\"),\n  updateConfig: (config: { apiKey?: string; model?: string; language?: string; opacity?: number }) => \n    ipcRenderer.invoke(\"update-config\", config),\n  onShowSettings: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(\"show-settings-dialog\", subscription)\n    return () => {\n      ipcRenderer.removeListener(\"show-settings-dialog\", subscription)\n    }\n  },\n  checkApiKey: () => ipcRenderer.invoke(\"check-api-key\"),\n  validateApiKey: (apiKey: string) => \n    ipcRenderer.invoke(\"validate-api-key\", apiKey),\n  openExternal: (url: string) => \n    ipcRenderer.invoke(\"openExternal\", url),\n  onApiKeyInvalid: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(PROCESSING_EVENTS.API_KEY_INVALID, subscription)\n    return () => {\n      ipcRenderer.removeListener(PROCESSING_EVENTS.API_KEY_INVALID, subscription)\n    }\n  },\n  removeListener: (eventName: string, callback: (...args: any[]) => void) => {\n    ipcRenderer.removeListener(eventName, callback)\n  },\n  onDeleteLastScreenshot: (callback: () => void) => {\n    const subscription = () => callback()\n    ipcRenderer.on(\"delete-last-screenshot\", subscription)\n    return () => {\n      ipcRenderer.removeListener(\"delete-last-screenshot\", subscription)\n    }\n  },\n  deleteLastScreenshot: () => ipcRenderer.invoke(\"delete-last-screenshot\"),\n  \n  // 添加控制鼠标事件穿透的方法\n  setIgnoreMouseEvents: (ignore: boolean, options?: { forward: boolean }) => {\n    return ipcRenderer.invoke('set-ignore-mouse-events', ignore, options);\n  },\n  \n  // 新增：区域性穿透API\n  setIgnoreMouseEventsExcept: (exceptRegions: Array<{x: number, y: number, width: number, height: number}>) => {\n    return ipcRenderer.invoke('set-ignore-mouse-events-except', exceptRegions);\n  },\n\n  // 新增：显示设置对话框\n  showSettings: () => {\n    return ipcRenderer.send('show-settings-dialog');\n  },\n}\n\n// Before exposing the API\nconsole.log(\n  \"About to expose electronAPI with methods:\",\n  Object.keys(electronAPI)\n)\n\n// Expose the API\ncontextBridge.exposeInMainWorld(\"electronAPI\", electronAPI)\n\nconsole.log(\"electronAPI exposed to window\")\n\n// Add this focus restoration handler\nipcRenderer.on(\"restore-focus\", () => {\n  // Try to focus the active element if it exists\n  const activeElement = document.activeElement as HTMLElement\n  if (activeElement && typeof activeElement.focus === \"function\") {\n    activeElement.focus()\n  }\n})\n\n// Remove auth-callback handling - no longer needed\n"],"names":["shell","PROCESSING_EVENTS","electronAPI","authData","ipcRenderer","dimensions","path","result","error","callback","subscription","_","data","_event","url","info","credits","config","apiKey","eventName","ignore","options","exceptRegions","contextBridge","activeElement"],"mappings":"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"}