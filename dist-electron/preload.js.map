{"version":3,"file":"preload.js","sources":["../electron/preload.ts"],"sourcesContent":["console.log(\"Preload script starting...\")\r\nimport { contextBridge, ipcRenderer } from \"electron\"\r\nconst { shell } = require(\"electron\")\r\n\r\nexport const PROCESSING_EVENTS = {\r\n  //global states\r\n  UNAUTHORIZED: \"procesing-unauthorized\",\r\n  NO_SCREENSHOTS: \"processing-no-screenshots\",\r\n  OUT_OF_CREDITS: \"out-of-credits\",\r\n  API_KEY_INVALID: \"api-key-invalid\",\r\n\r\n  //states for generating the initial solution\r\n  INITIAL_START: \"initial-start\",\r\n  PROBLEM_EXTRACTED: \"problem-extracted\",\r\n  SOLUTION_SUCCESS: \"solution-success\",\r\n  INITIAL_SOLUTION_ERROR: \"solution-error\",\r\n  RESET: \"reset\",\r\n\r\n  //states for processing the debugging\r\n  DEBUG_START: \"debug-start\",\r\n  DEBUG_SUCCESS: \"debug-success\",\r\n  DEBUG_ERROR: \"debug-error\"\r\n} as const\r\n\r\n// At the top of the file\r\nconsole.log(\"Preload script is running\")\r\n\r\nconst electronAPI = {\r\n  // Original methods\r\n  openSubscriptionPortal: async (authData: { id: string; email: string }) => {\r\n    return ipcRenderer.invoke(\"open-subscription-portal\", authData)\r\n  },\r\n  openSettingsPortal: () => ipcRenderer.invoke(\"open-settings-portal\"),\r\n  updateContentDimensions: (dimensions: { width: number; height: number }) =>\r\n    ipcRenderer.invoke(\"update-content-dimensions\", dimensions),\r\n  clearStore: () => ipcRenderer.invoke(\"clear-store\"),\r\n  getScreenshots: () => ipcRenderer.invoke(\"get-screenshots\"),\r\n  deleteScreenshot: (path: string) =>\r\n    ipcRenderer.invoke(\"delete-screenshot\", path),\r\n  toggleMainWindow: async () => {\r\n    console.log(\"toggleMainWindow called from preload\")\r\n    try {\r\n      const result = await ipcRenderer.invoke(\"toggle-window\")\r\n      console.log(\"toggle-window result:\", result)\r\n      return result\r\n    } catch (error) {\r\n      console.error(\"Error in toggleMainWindow:\", error)\r\n      throw error\r\n    }\r\n  },\r\n  // Event listeners\r\n  onScreenshotTaken: (\r\n    callback: (data: { path: string; preview: string }) => void\r\n  ) => {\r\n    const subscription = (_: any, data: { path: string; preview: string }) =>\r\n      callback(data)\r\n    ipcRenderer.on(\"screenshot-taken\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"screenshot-taken\", subscription)\r\n    }\r\n  },\r\n  onResetView: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(\"reset-view\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"reset-view\", subscription)\r\n    }\r\n  },\r\n  onSolutionStart: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(PROCESSING_EVENTS.INITIAL_START, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(PROCESSING_EVENTS.INITIAL_START, subscription)\r\n    }\r\n  },\r\n  onDebugStart: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(PROCESSING_EVENTS.DEBUG_START, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(PROCESSING_EVENTS.DEBUG_START, subscription)\r\n    }\r\n  },\r\n  onDebugSuccess: (callback: (data: any) => void) => {\r\n    ipcRenderer.on(\"debug-success\", (_event, data) => callback(data))\r\n    return () => {\r\n      ipcRenderer.removeListener(\"debug-success\", (_event, data) =>\r\n        callback(data)\r\n      )\r\n    }\r\n  },\r\n  onDebugError: (callback: (error: string) => void) => {\r\n    const subscription = (_: any, error: string) => callback(error)\r\n    ipcRenderer.on(PROCESSING_EVENTS.DEBUG_ERROR, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(PROCESSING_EVENTS.DEBUG_ERROR, subscription)\r\n    }\r\n  },\r\n  onSolutionError: (callback: (error: string) => void) => {\r\n    const subscription = (_: any, error: string) => callback(error)\r\n    ipcRenderer.on(PROCESSING_EVENTS.INITIAL_SOLUTION_ERROR, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\r\n        PROCESSING_EVENTS.INITIAL_SOLUTION_ERROR,\r\n        subscription\r\n      )\r\n    }\r\n  },\r\n  onProcessingNoScreenshots: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(PROCESSING_EVENTS.NO_SCREENSHOTS, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(PROCESSING_EVENTS.NO_SCREENSHOTS, subscription)\r\n    }\r\n  },\r\n  onOutOfCredits: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(PROCESSING_EVENTS.OUT_OF_CREDITS, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(PROCESSING_EVENTS.OUT_OF_CREDITS, subscription)\r\n    }\r\n  },\r\n  onProblemExtracted: (callback: (data: any) => void) => {\r\n    const subscription = (_: any, data: any) => callback(data)\r\n    ipcRenderer.on(PROCESSING_EVENTS.PROBLEM_EXTRACTED, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\r\n        PROCESSING_EVENTS.PROBLEM_EXTRACTED,\r\n        subscription\r\n      )\r\n    }\r\n  },\r\n  onSolutionSuccess: (callback: (data: any) => void) => {\r\n    const subscription = (_: any, data: any) => callback(data)\r\n    ipcRenderer.on(PROCESSING_EVENTS.SOLUTION_SUCCESS, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\r\n        PROCESSING_EVENTS.SOLUTION_SUCCESS,\r\n        subscription\r\n      )\r\n    }\r\n  },\r\n  onUnauthorized: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(PROCESSING_EVENTS.UNAUTHORIZED, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(PROCESSING_EVENTS.UNAUTHORIZED, subscription)\r\n    }\r\n  },\r\n  // External URL handler\r\n  openLink: (url: string) => shell.openExternal(url),\r\n  triggerScreenshot: () => ipcRenderer.invoke(\"trigger-screenshot\"),\r\n  triggerProcessScreenshots: () =>\r\n    ipcRenderer.invoke(\"trigger-process-screenshots\"),\r\n  triggerReset: () => ipcRenderer.invoke(\"trigger-reset\"),\r\n  triggerMoveLeft: () => ipcRenderer.invoke(\"trigger-move-left\"),\r\n  triggerMoveRight: () => ipcRenderer.invoke(\"trigger-move-right\"),\r\n  triggerMoveUp: () => ipcRenderer.invoke(\"trigger-move-up\"),\r\n  triggerMoveDown: () => ipcRenderer.invoke(\"trigger-move-down\"),\r\n  onSubscriptionUpdated: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(\"subscription-updated\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"subscription-updated\", subscription)\r\n    }\r\n  },\r\n  onSubscriptionPortalClosed: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(\"subscription-portal-closed\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"subscription-portal-closed\", subscription)\r\n    }\r\n  },\r\n  onReset: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(PROCESSING_EVENTS.RESET, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(PROCESSING_EVENTS.RESET, subscription)\r\n    }\r\n  },\r\n  startUpdate: () => ipcRenderer.invoke(\"start-update\"),\r\n  installUpdate: () => ipcRenderer.invoke(\"install-update\"),\r\n  onUpdateAvailable: (callback: (info: any) => void) => {\r\n    const subscription = (_: any, info: any) => callback(info)\r\n    ipcRenderer.on(\"update-available\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"update-available\", subscription)\r\n    }\r\n  },\r\n  onUpdateDownloaded: (callback: (info: any) => void) => {\r\n    const subscription = (_: any, info: any) => callback(info)\r\n    ipcRenderer.on(\"update-downloaded\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"update-downloaded\", subscription)\r\n    }\r\n  },\r\n  // 🆕 新的积分管理方法\r\n  creditsGet: () => ipcRenderer.invoke(\"credits:get\"),\r\n  creditsCheck: (params: { modelName: string; questionType: string }) => \r\n    ipcRenderer.invoke(\"credits:check\", params),\r\n  creditsDeduct: (params: { modelName: string; questionType: string; operationId?: string }) => \r\n    ipcRenderer.invoke(\"credits:deduct\", params),\r\n  creditsRefund: (params: { operationId: string; amount: number; reason?: string }) => \r\n    ipcRenderer.invoke(\"credits:refund\", params),\r\n\r\n  // 🆕 兼容旧系统的方法（逐步废弃）\r\n  decrementCredits: () => ipcRenderer.invoke(\"decrement-credits\"),\r\n  onCreditsUpdated: (callback: (credits: number) => void) => {\r\n    const subscription = (_event: any, credits: number) => callback(credits)\r\n    ipcRenderer.on(\"credits-updated\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"credits-updated\", subscription)\r\n    }\r\n  },\r\n  getPlatform: () => process.platform,\r\n  \r\n  // New methods for OpenAI API integration\r\n  getConfig: () => ipcRenderer.invoke(\"get-config\"),\r\n  updateConfig: (config: { apiKey?: string; model?: string; language?: string; opacity?: number }) => \r\n    ipcRenderer.invoke(\"update-config\", config),\r\n  onShowSettings: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(\"show-settings-dialog\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"show-settings-dialog\", subscription)\r\n    }\r\n  },\r\n  checkApiKey: () => ipcRenderer.invoke(\"check-api-key\"),\r\n  validateApiKey: (apiKey: string) => \r\n    ipcRenderer.invoke(\"validate-api-key\", apiKey),\r\n  openExternal: (url: string) => \r\n    ipcRenderer.invoke(\"openExternal\", url),\r\n  onApiKeyInvalid: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(PROCESSING_EVENTS.API_KEY_INVALID, subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(PROCESSING_EVENTS.API_KEY_INVALID, subscription)\r\n    }\r\n  },\r\n  removeListener: (eventName: string, callback: (...args: any[]) => void) => {\r\n    ipcRenderer.removeListener(eventName, callback)\r\n  },\r\n  onDeleteLastScreenshot: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(\"delete-last-screenshot\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"delete-last-screenshot\", subscription)\r\n    }\r\n  },\r\n  deleteLastScreenshot: () => ipcRenderer.invoke(\"delete-last-screenshot\"),\r\n  \r\n  // 添加控制鼠标事件穿透的方法\r\n  setIgnoreMouseEvents: (ignore: boolean, options?: { forward: boolean }) => {\r\n    return ipcRenderer.invoke('set-ignore-mouse-events', ignore, options);\r\n  },\r\n  \r\n  // 新增：区域性穿透API\r\n  setIgnoreMouseEventsExcept: (exceptRegions: Array<{x: number, y: number, width: number, height: number}>) => {\r\n    return ipcRenderer.invoke('set-ignore-mouse-events-except', exceptRegions);\r\n  },\r\n\r\n  // 新增：显示设置对话框\r\n  showSettings: () => {\r\n    return ipcRenderer.send('show-settings-dialog');\r\n  },\r\n\r\n  // Web Authentication methods\r\n  webAuthLogin: () => ipcRenderer.invoke(\"web-auth-login\"),\r\n  webAuthLogout: () => ipcRenderer.invoke(\"web-auth-logout\"),\r\n  webAuthStatus: () => ipcRenderer.invoke(\"web-auth-status\"),\r\n  webSyncConfig: () => ipcRenderer.invoke(\"web-sync-config\"),\r\n  webUpdateConfig: (config: any) => ipcRenderer.invoke(\"web-update-config\", config),\r\n  webGetAIModels: () => ipcRenderer.invoke(\"web-get-ai-models\"),\r\n  webGetLanguages: () => ipcRenderer.invoke(\"web-get-languages\"),\r\n  webCheckConnection: () => ipcRenderer.invoke(\"web-check-connection\"),\r\n  \r\n  // Web Authentication event listeners\r\n  onWebAuthStatus: (callback: (data: { authenticated: boolean; user: any }) => void) => {\r\n    const subscription = (_: any, data: { authenticated: boolean; user: any }) => callback(data)\r\n    ipcRenderer.on(\"web-auth-status\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"web-auth-status\", subscription)\r\n    }\r\n  },\r\n  onConfigUpdated: (callback: (config: any) => void) => {\r\n    const subscription = (_: any, config: any) => callback(config)\r\n    ipcRenderer.on(\"config-updated\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"config-updated\", subscription)\r\n    }\r\n  },\r\n  \r\n  // 添加通知事件监听器\r\n  onNotification: (callback: (notification: any) => void) => {\r\n    const subscription = (_: any, notification: any) => callback(notification)\r\n    ipcRenderer.on(\"show-notification\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"show-notification\", subscription)\r\n    }\r\n  },\r\n  \r\n  // 添加清除通知事件监听器\r\n  onClearNotification: (callback: () => void) => {\r\n    const subscription = () => callback()\r\n    ipcRenderer.on(\"clear-notification\", subscription)\r\n    return () => {\r\n      ipcRenderer.removeListener(\"clear-notification\", subscription)\r\n    }\r\n  },\r\n}\r\n\r\n// Before exposing the API\r\nconsole.log(\r\n  \"About to expose electronAPI with methods:\",\r\n  Object.keys(electronAPI)\r\n)\r\n\r\n// Expose the API\r\ncontextBridge.exposeInMainWorld(\"electronAPI\", electronAPI)\r\n\r\nconsole.log(\"electronAPI exposed to window\")\r\n\r\n// Add this focus restoration handler\r\nipcRenderer.on(\"restore-focus\", () => {\r\n  // Try to focus the active element if it exists\r\n  const activeElement = document.activeElement as HTMLElement\r\n  if (activeElement && typeof activeElement.focus === \"function\") {\r\n    activeElement.focus()\r\n  }\r\n})\r\n\r\n// Remove auth-callback handling - no longer needed\r\n"],"names":["ipcRenderer","contextBridge"],"mappings":"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"}