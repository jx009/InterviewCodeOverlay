@tailwind base;
@tailwind components;
@tailwind utilities;

/* 🆕 CSS变量用于控制背景透明度 */
:root {
  --bg-opacity: 0.8; /* 默认背景透明度 */
}

/* 根元素透明背景 */
html, body, #root {
  background: transparent !important;
}

/* 🆕 背景透明度控制类 */
.opacity-controlled-bg {
  background-color: rgba(0, 0, 0, var(--bg-opacity)) !important;
}

/* 🆕 可控制的半透明背景（用于按钮等） */
.opacity-controlled-bg-light {
  background-color: rgba(0, 0, 0, calc(var(--bg-opacity) * 0.6)) !important;
}

.opacity-controlled-bg-light:hover {
  background-color: rgba(0, 0, 0, var(--bg-opacity)) !important;
}

/* 🆕 代码块背景 - 使用固定的半透明度以确保可读性 */
.code-block-bg {
  background-color: rgba(0, 0, 0, 0.4) !important; /* 代码块背景保持固定透明度 */
}

/* 🆕 代码高亮背景 - 更暗一些以便突出代码 */
.code-highlight-bg {
  background-color: rgba(0, 0, 0, 0.6) !important;
}

/* 确保代码块文字始终不透明 */
pre, code, .hljs {
  color: rgba(255, 255, 255, 1) !important; /* 代码文字始终完全不透明 */
}

/* 确保其他重要文字元素不受背景透明度影响 */
.text-preserve {
  opacity: 1 !important;
}

/* Custom animations for UI elements */
@keyframes fadeIn {
  from { opacity: 0; transform: translate(-50%, -48%); }
  to { opacity: 0.98; transform: translate(-50%, -50%); }
}

/* 🆕 流式输出动画效果 */
@keyframes streamingPulse {
  0% { 
    border-color: #3b82f6; 
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4); 
  }
  50% { 
    border-color: #60a5fa; 
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1); 
  }
  100% { 
    border-color: #3b82f6; 
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4); 
  }
}

@keyframes typingCursor {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

/* 流式代码样式 */
.streaming-code {
  animation: streamingPulse 2s ease-in-out infinite;
  position: relative;
}

.streaming-code::after {
  content: "";
  position: absolute;
  right: 8px;
  bottom: 8px;
  width: 2px;
  height: 20px;
  background-color: #3b82f6;
  animation: typingCursor 1s infinite;
}

/* 流式内容渐入动画 */
@keyframes fadeIn {
  from { 
    opacity: 0; 
    transform: translateY(10px); 
  }
  to { 
    opacity: 1; 
    transform: translateY(0); 
  }
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out;
}

/* Dialog transition improvements */
.settings-dialog {
  transform-origin: center;
  backface-visibility: hidden;
  will-change: opacity, transform;
}

/* Custom styling for dropdowns */
select {
  appearance: menulist;
  background-color: #000000 !important;
  color: white !important;
}

option {
  background-color: #1a1a1a !important;
  color: white !important;
  padding: 8px !important;
}

.frosted-glass {
  background: rgba(26, 26, 26, 0.8);
  backdrop-filter: blur(8px);
}

.auth-button {
  background: rgba(252, 252, 252, 0.98);
  color: rgba(60, 60, 60, 0.9);
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  z-index: 2;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);
}

.auth-button:hover {
  background: rgba(255, 255, 255, 1);
}

.auth-button::before {
  content: "";
  position: absolute;
  inset: -8px;
  background: linear-gradient(45deg, #ff000000, #0000ff00);
  z-index: -1;
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: inherit;
  filter: blur(24px);
  opacity: 0;
}

.auth-button:hover::before {
  background: linear-gradient(
    45deg,
    rgba(255, 0, 0, 0.4),
    rgba(0, 0, 255, 0.4)
  );
  filter: blur(48px);
  inset: -16px;
  opacity: 1;
}

/* 添加鼠标事件处理相关样式 */
.top-area {
  position: relative;
  z-index: 100;
  pointer-events: auto !important;
}

.main-content {
  position: relative;
  pointer-events: none !important;
}

.main-content .pointer-events-auto {
  pointer-events: auto !important;
}