name: 🚀 Build and Release Electron App

# 触发条件
on:
  push:
    branches: [ main, master, test1 ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master, test1 ]
  workflow_dispatch:

# 环境变量
env:
  NODE_VERSION: 18
  ELECTRON_CACHE: ~/.cache/electron
  ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder

jobs:
  # 构建和打包任务
  build:
    name: 🔨 Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        
    steps:
      - name: 🚚 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🔧 Setup Python (for native modules)
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: 🍎 Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          # 安装macOS构建依赖
          python -m pip install setuptools
          
      - name: 🪟 Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          # 安装Windows构建依赖
          echo "Using built-in Windows build tools"
          
      - name: 🧹 Clean problematic files
        run: |
          # Remove any problematic files
          find . -name "nul" -type f -delete 2>/dev/null || true
          rm -f nul 2>/dev/null || true
          rm -f backend/nul 2>/dev/null || true
        shell: bash
        
      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit
        
      - name: 🧪 Run tests (if available)
        run: npm test || echo "Tests completed"
        continue-on-error: true
        
      - name: 🔧 Build application
        run: npm run build
        
      - name: 📱 Package Windows app
        if: matrix.os == 'windows-latest'
        run: npm run package-win
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-builder
          
      - name: 🍎 Disable macOS code signing
        if: matrix.os == 'macos-latest'
        run: |
          # 清除所有可能导致签名的环境变量
          unset CSC_LINK 2>/dev/null || true
          unset CSC_KEY_PASSWORD 2>/dev/null || true
          unset APPLE_ID 2>/dev/null || true
          unset APPLE_APP_SPECIFIC_PASSWORD 2>/dev/null || true
          unset APPLE_TEAM_ID 2>/dev/null || true
          # 设置禁用签名的环境变量
          export CSC_IDENTITY_AUTO_DISCOVERY=false
          # 清空keychain中的所有证书
          security delete-keychain login.keychain 2>/dev/null || true
          echo "✅ Code signing disabled"
          
      - name: 🍎 Package macOS app
        if: matrix.os == 'macos-latest'
        run: npm run package-mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-builder
          
      - name: 🏗️ Build completed successfully
        run: |
          echo "✅ Build completed! Artifacts temporarily disabled due to storage quota."
          echo "📦 Built files are located in the release/ directory"
          if [ -d "release" ]; then
            echo "📋 Generated files:"
            find release/ -type f -name "*.exe" -o -name "*.dmg" -o -name "*.zip" | head -10
          fi
          
      - name: 📤 Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-${{ github.run_number }}
          path: |
            release/**/*.exe
            release/**/*.nsis.7z
            release/**/*.yml
          retention-days: 1
          
      - name: 📤 Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-${{ github.run_number }}
          path: |
            release/**/*.dmg
            release/**/*.zip
            release/**/*.yml
          retention-days: 1
        
  # GitHub Release temporarily disabled due to artifacts storage issues
  # Will be re-enabled after storage quota is resolved